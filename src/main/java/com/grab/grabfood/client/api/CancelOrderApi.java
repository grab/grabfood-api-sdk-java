// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
 * GrabFood
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.grab.grabfood.client.api;

import com.grab.grabfood.client.ApiCallback;
import com.grab.grabfood.client.ApiClient;
import com.grab.grabfood.client.ApiException;
import com.grab.grabfood.client.ApiResponse;
import com.grab.grabfood.client.Configuration;
import com.grab.grabfood.client.Pair;
import com.grab.grabfood.client.ProgressRequestBody;
import com.grab.grabfood.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.grab.grabfood.client.model.CancelOrderRequest;
import com.grab.grabfood.client.model.CancelOrderResponse;
import com.grab.grabfood.client.model.Error;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CancelOrderApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CancelOrderApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CancelOrderApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for cancelOrder
     * @param contentType The content type of the request body. You must use &#x60;application/json&#x60; for this header as GrabFood API currently does not support other formats. (required)
     * @param authorization Specify the generated authorization token of the bearer type. (required)
     * @param cancelOrderRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The API request is successfully processed. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> invalid_argument </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> This request is forbidden.  For each 403 HTTP response, a detailed reason will be returned. | Type | Message | | -------| ------------| | Invalid order | Order cannot be cancelled via this endpoint as this order does not belong to you. Please contact Grab Support for further assistance. | | Daily limit reached | Order cannot be cancelled via this endpoint as the daily limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Weekly limit reached | Order cannot be cancelled via this endpoint as the weekly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Monthly limit reached | Order cannot be cancelled via this endpoint as the monthly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Mix and match order | Order cannot be cancelled via this endpoint as it is part of a GKMM (Grab Kitchen Mix And Match) order. Please contact Grab Support for further assistance. | | Self-pick up order | Order cannot be cancelled via this endpoint as it is a self-pick up order. Please contact Grab Support for further assistance. | | Scheduled order | Order cannot be cancelled via this endpoint as it is a scheduled order. Please contact Grab Support for further assistance. | | Time limit | Order cannot be cancelled via this endpoint as the cancellation time limit has been reached since a driver has been allocated for too long. Please contact Grab Support for further assistance. | | Manual-accept stores | Order cannot be cancelled via this endpoint as only stores on auto-accept can use this endpoint. Please contact Grab Support for further assistance. | | Outdated driver app | Order cannot be cancelled via this endpoint as the driver&#39;s Grab app is outdated. Please contact Grab Support for further assistance. | | Unallocated order | Order cannot be cancelled via this endpoint as the order has not been allocated yet. Please contact Grab Support for further assistance. | | Default error (edge case) | Order cannot be cancelled via this endpoint as a default error has occured. Please contact Grab Support for further assistance. |  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> not_found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 5XX error codes are rare and indicate that GrabFood is facing an internal server error. This type of error is applicable to all HTTP response codes in the 500 range, e.g. 500, 504. Retry the operation at a later time with a unique ID. Use an exponential backoff retry mechanism to resend the requests at an increasingly slower interval. It is also a good practice to use a randomized delay (jitter) in your retry schedule.  | Type | Message | | -------| ------------| | Get order error | Get order failed. | | Cancel order error | Cancel order failed. |  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cancelOrderCall(String contentType, String authorization, CancelOrderRequest cancelOrderRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = cancelOrderRequest;

        // create path and map variables
        String localVarPath = "/partner/v1/order/cancel";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cancelOrderValidateBeforeCall(String contentType, String authorization, CancelOrderRequest cancelOrderRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling cancelOrder(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling cancelOrder(Async)");
        }

        // verify the required parameter 'cancelOrderRequest' is set
        if (cancelOrderRequest == null) {
            throw new ApiException("Missing the required parameter 'cancelOrderRequest' when calling cancelOrder(Async)");
        }

        return cancelOrderCall(contentType, authorization, cancelOrderRequest, _callback);

    }

    /**
     * Cancel an order
     * 
     * @param contentType The content type of the request body. You must use &#x60;application/json&#x60; for this header as GrabFood API currently does not support other formats. (required)
     * @param authorization Specify the generated authorization token of the bearer type. (required)
     * @param cancelOrderRequest  (required)
     * @return CancelOrderResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The API request is successfully processed. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> invalid_argument </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> This request is forbidden.  For each 403 HTTP response, a detailed reason will be returned. | Type | Message | | -------| ------------| | Invalid order | Order cannot be cancelled via this endpoint as this order does not belong to you. Please contact Grab Support for further assistance. | | Daily limit reached | Order cannot be cancelled via this endpoint as the daily limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Weekly limit reached | Order cannot be cancelled via this endpoint as the weekly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Monthly limit reached | Order cannot be cancelled via this endpoint as the monthly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Mix and match order | Order cannot be cancelled via this endpoint as it is part of a GKMM (Grab Kitchen Mix And Match) order. Please contact Grab Support for further assistance. | | Self-pick up order | Order cannot be cancelled via this endpoint as it is a self-pick up order. Please contact Grab Support for further assistance. | | Scheduled order | Order cannot be cancelled via this endpoint as it is a scheduled order. Please contact Grab Support for further assistance. | | Time limit | Order cannot be cancelled via this endpoint as the cancellation time limit has been reached since a driver has been allocated for too long. Please contact Grab Support for further assistance. | | Manual-accept stores | Order cannot be cancelled via this endpoint as only stores on auto-accept can use this endpoint. Please contact Grab Support for further assistance. | | Outdated driver app | Order cannot be cancelled via this endpoint as the driver&#39;s Grab app is outdated. Please contact Grab Support for further assistance. | | Unallocated order | Order cannot be cancelled via this endpoint as the order has not been allocated yet. Please contact Grab Support for further assistance. | | Default error (edge case) | Order cannot be cancelled via this endpoint as a default error has occured. Please contact Grab Support for further assistance. |  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> not_found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 5XX error codes are rare and indicate that GrabFood is facing an internal server error. This type of error is applicable to all HTTP response codes in the 500 range, e.g. 500, 504. Retry the operation at a later time with a unique ID. Use an exponential backoff retry mechanism to resend the requests at an increasingly slower interval. It is also a good practice to use a randomized delay (jitter) in your retry schedule.  | Type | Message | | -------| ------------| | Get order error | Get order failed. | | Cancel order error | Cancel order failed. |  </td><td>  -  </td></tr>
     </table>
     */
    public CancelOrderResponse cancelOrder(String contentType, String authorization, CancelOrderRequest cancelOrderRequest) throws ApiException {
        ApiResponse<CancelOrderResponse> localVarResp = cancelOrderWithHttpInfo(contentType, authorization, cancelOrderRequest);
        return localVarResp.getData();
    }

    /**
     * Cancel an order
     * 
     * @param contentType The content type of the request body. You must use &#x60;application/json&#x60; for this header as GrabFood API currently does not support other formats. (required)
     * @param authorization Specify the generated authorization token of the bearer type. (required)
     * @param cancelOrderRequest  (required)
     * @return ApiResponse&lt;CancelOrderResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The API request is successfully processed. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> invalid_argument </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> This request is forbidden.  For each 403 HTTP response, a detailed reason will be returned. | Type | Message | | -------| ------------| | Invalid order | Order cannot be cancelled via this endpoint as this order does not belong to you. Please contact Grab Support for further assistance. | | Daily limit reached | Order cannot be cancelled via this endpoint as the daily limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Weekly limit reached | Order cannot be cancelled via this endpoint as the weekly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Monthly limit reached | Order cannot be cancelled via this endpoint as the monthly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Mix and match order | Order cannot be cancelled via this endpoint as it is part of a GKMM (Grab Kitchen Mix And Match) order. Please contact Grab Support for further assistance. | | Self-pick up order | Order cannot be cancelled via this endpoint as it is a self-pick up order. Please contact Grab Support for further assistance. | | Scheduled order | Order cannot be cancelled via this endpoint as it is a scheduled order. Please contact Grab Support for further assistance. | | Time limit | Order cannot be cancelled via this endpoint as the cancellation time limit has been reached since a driver has been allocated for too long. Please contact Grab Support for further assistance. | | Manual-accept stores | Order cannot be cancelled via this endpoint as only stores on auto-accept can use this endpoint. Please contact Grab Support for further assistance. | | Outdated driver app | Order cannot be cancelled via this endpoint as the driver&#39;s Grab app is outdated. Please contact Grab Support for further assistance. | | Unallocated order | Order cannot be cancelled via this endpoint as the order has not been allocated yet. Please contact Grab Support for further assistance. | | Default error (edge case) | Order cannot be cancelled via this endpoint as a default error has occured. Please contact Grab Support for further assistance. |  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> not_found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 5XX error codes are rare and indicate that GrabFood is facing an internal server error. This type of error is applicable to all HTTP response codes in the 500 range, e.g. 500, 504. Retry the operation at a later time with a unique ID. Use an exponential backoff retry mechanism to resend the requests at an increasingly slower interval. It is also a good practice to use a randomized delay (jitter) in your retry schedule.  | Type | Message | | -------| ------------| | Get order error | Get order failed. | | Cancel order error | Cancel order failed. |  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CancelOrderResponse> cancelOrderWithHttpInfo(String contentType, String authorization, CancelOrderRequest cancelOrderRequest) throws ApiException {
        okhttp3.Call localVarCall = cancelOrderValidateBeforeCall(contentType, authorization, cancelOrderRequest, null);
        Type localVarReturnType = new TypeToken<CancelOrderResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Cancel an order (asynchronously)
     * 
     * @param contentType The content type of the request body. You must use &#x60;application/json&#x60; for this header as GrabFood API currently does not support other formats. (required)
     * @param authorization Specify the generated authorization token of the bearer type. (required)
     * @param cancelOrderRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The API request is successfully processed. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> invalid_argument </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> This request is forbidden.  For each 403 HTTP response, a detailed reason will be returned. | Type | Message | | -------| ------------| | Invalid order | Order cannot be cancelled via this endpoint as this order does not belong to you. Please contact Grab Support for further assistance. | | Daily limit reached | Order cannot be cancelled via this endpoint as the daily limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Weekly limit reached | Order cannot be cancelled via this endpoint as the weekly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Monthly limit reached | Order cannot be cancelled via this endpoint as the monthly limit for order cancellations has been reached. Please contact Grab Support for further assistance. | | Mix and match order | Order cannot be cancelled via this endpoint as it is part of a GKMM (Grab Kitchen Mix And Match) order. Please contact Grab Support for further assistance. | | Self-pick up order | Order cannot be cancelled via this endpoint as it is a self-pick up order. Please contact Grab Support for further assistance. | | Scheduled order | Order cannot be cancelled via this endpoint as it is a scheduled order. Please contact Grab Support for further assistance. | | Time limit | Order cannot be cancelled via this endpoint as the cancellation time limit has been reached since a driver has been allocated for too long. Please contact Grab Support for further assistance. | | Manual-accept stores | Order cannot be cancelled via this endpoint as only stores on auto-accept can use this endpoint. Please contact Grab Support for further assistance. | | Outdated driver app | Order cannot be cancelled via this endpoint as the driver&#39;s Grab app is outdated. Please contact Grab Support for further assistance. | | Unallocated order | Order cannot be cancelled via this endpoint as the order has not been allocated yet. Please contact Grab Support for further assistance. | | Default error (edge case) | Order cannot be cancelled via this endpoint as a default error has occured. Please contact Grab Support for further assistance. |  </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> not_found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 5XX error codes are rare and indicate that GrabFood is facing an internal server error. This type of error is applicable to all HTTP response codes in the 500 range, e.g. 500, 504. Retry the operation at a later time with a unique ID. Use an exponential backoff retry mechanism to resend the requests at an increasingly slower interval. It is also a good practice to use a randomized delay (jitter) in your retry schedule.  | Type | Message | | -------| ------------| | Get order error | Get order failed. | | Cancel order error | Cancel order failed. |  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cancelOrderAsync(String contentType, String authorization, CancelOrderRequest cancelOrderRequest, final ApiCallback<CancelOrderResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cancelOrderValidateBeforeCall(contentType, authorization, cancelOrderRequest, _callback);
        Type localVarReturnType = new TypeToken<CancelOrderResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
